The rotate.py file chops whatever the heck you give it into 2 character ordered pairs, and treats that as a (x,y) vector in the coordinate plane.


It then performs a key degree counter-clockwise rotation upon the said vector, and puts the result x and y as 4 characters into the encoded file.


To decode this, we simple chop the decoded file into 8 character ordered pairs, with the first 4 being x and the last 4 being y, and perform
a clockwise rotation on this vector of similar magnitude to restore the original x and y, which we then put into the output file.


Use penguins.jpg to test code idea, then run the following brute force loop to force out the answer to the flag:

for i in `seq 1 360`;
> do
> ./solution flag.jpg.enc $i;
> done

That'll give you 360 results, which is all possible rotations, most of them will be gibberish, but flag_decoded123.jpg contains an actual image, which is the flag.

Flag: ADCTF_TR0t4T3_f4C3
